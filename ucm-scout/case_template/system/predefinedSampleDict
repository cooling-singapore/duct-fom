/*--------------------------------*- C++ -*----------------------------------*\ 
| =========                 |                                                 |
| \      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \    /   O peration     | Version:  v1812                                |
|   \  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
version     2.0;
format      ascii;
class       dictionary;
object     sampleDict;
}


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * // 

type surfaces;
libs ("libsampling.so");
surfaceFormat vtk;
fields (U p T Tmrt relHum PMV treeBlanking qcb WBGT) ;
interpolationScheme cellPoint;
surfaces
(
	###STL_NAME###
	{
		type sampledTriSurfaceMesh;
		surface ###STL_NAME###.stl;
		source cells;
		interpolate true;
	}
	contour_xy_1
	{
		type cuttingPlane;
		planeType   pointAndNormal;
		pointAndNormalDict 
		{
			point   (0 0 1);
			normal  (0 0 1);
		}
		interpolate     true;
		triangulate true;
		mergeTol 1e-8;
		bounds  (###X_MIN### ###Y_MIN### 0.0) (###X_MAX### ###Y_MAX### 2.0);
	}
	contour_xy_1.2
	{
		type cuttingPlane;
		planeType   pointAndNormal;
		pointAndNormalDict 
		{
			point   (0 0 1.2);
			normal  (0 0 1);
		}
		interpolate     true;
		triangulate true;
		mergeTol 1e-8;
		bounds  (###X_MIN### ###Y_MIN### 0.2) (###X_MAX### ###Y_MAX### 2.2);
	}
	contour_xy_1.5
	{
		type cuttingPlane;
		planeType   pointAndNormal;
		pointAndNormalDict 
		{
			point   (0 0 1.5);
			normal  (0 0 1);
		}
		interpolate     true;
		triangulate true;
		mergeTol 1e-8;
		bounds  (###X_MIN### ###Y_MIN### 0.5) (###X_MAX### ###Y_MAX### 2.5);
	}
	contour_xy_2
	{
		type cuttingPlane;
		planeType   pointAndNormal;
		pointAndNormalDict 
		{
			point   (0 0 2);
			normal  (0 0 1);
		}
		interpolate     true;
		triangulate true;
		mergeTol 1e-8;
		bounds  (###X_MIN### ###Y_MIN### 1.0) (###X_MAX### ###Y_MAX### 3.0);
	}
	contour_xy_3
	{
		type cuttingPlane;
		planeType   pointAndNormal;
		pointAndNormalDict
		{
			point   (0 0 3);
			normal  (0 0 1);
		}
		interpolate     true;
		triangulate true;
		mergeTol 1e-8;
		bounds  (###X_MIN### ###Y_MIN### 8.0) (###X_MAX### ###Y_MAX### 9.0);
	}
);
